package com.liyafeng.video;

public class Live {


    /**
     * 推流 ，
     * 点播，
     * 直播，
     * 短视频，
     * 连麦（观众能看到别人1v1对话），
     * 1v1音视频通话
     * nvn视频聊天室（多人音视频通话/音视频通信（Real-Time Communication））
     *          腾讯云（最多8个？），
     *          声网（最多17个），网易云信，阿里云（最多16个）
     *          七牛云（不限）
     * ==========================
     * 任何视频从一端传到另一端播放，都需要编码-》传输/推流-》（转码/合并）-》拉流-》解码-》展示
     * 所以编解码规则，传输协议用的是哪个很关键
     *
     * 直播
     * 调制（模拟信号转换为数字信号 yuv/pcm）->编码（压缩数据，h264/ acc） ->封装 mp4/flv ->协议封装(rtmp /hls/http-flv) ->
     * 推送给服务端 与服务端建立对应的协议，建立连接，然后发送数据
     * 服务端收到数据后，如果这个时候有客户端建立拉流连接，就立即给客户端吧数据发过去。
     * 客户端收到数据，解协议，解封装，解码，解调，然后吧数字信号发送给物理设备，渲染图像，播放声音
     *
     *
     *
     * ======================直播========================
     *
     * Real-Time Messaging Protocol，实时消息传输协议
     * 搭建一个rtmp媒体服务器；
     * 推流端；
     * 拉流端。
     *
     * ==================点播===================
     * 频点播是二十世纪90年代在国外发展起来的，
     * 英文称为“Video on Demand”，所以也称为“VOD”
     * 就像现在的电视盒子都是点播，爱奇艺，优酷等看电影都是点播的方式
     * 和电视的实时播放时有区别的。
     *
     * ==================实时视频聊天============
     * WebRTC，名称源自网页即时通信（英语：Web Real-Time Communication）的缩写
     * 是一个支持网页浏览器进行实时语音对话或视频对话的API。
     *
     * 直播是从rtmp拉流的过程，而互动连麦是 音视频通话，是rtc框架
     * 而观众看连麦的过程是主播和连麦者的音视频数据在服务器合成为1道流后
     * 推送到cdn流媒体服务器。
     * @param args
     */
    public static void main(String[] args) {

    }


    /**
     *
     */
    public void f1(){

    }

    /**
     * 1对1语音视频通话
     * http://www.52im.net/thread-1201-1-1.html（微信语音视频通话）
     * http://www.52im.net/thread-1311-1-1.html(腾讯自研实时视频聊天框架)
     *
     *
     */
    public void f2(){}
}
